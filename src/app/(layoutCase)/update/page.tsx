export default function about() {
  return (
    <div>
      <h1>페이지 업데이트 내용</h1>
      <div className="row">
        <p>현재 추후 퍼블리싱 추가</p>
      </div>
      <b> 2023-12-14 </b> start
      <br />
      <br />
      <b> 2023-12-14 </b> 프로젝트 생성 <br />
      라우터그룹(layoutCase)에 페이지와 parallel 모달 내용 구성
      <br />
      <br />
      <b> 2023-12-18 </b> <br />
      sidebar, header 등 공통 레이아웃 구성 추가
      <br />
      <br />
      <b> 2023-12-21 </b> <br />
      side메뉴 링크페이지 연결 ,프로필사진 추가, 프로필 소개 내용 추가
      <br />
      <br />
      <b> 2023-12-26 </b> <br />
      포스트 페이지, post 공통 컴포넌트 추가
      <br />
      <br />
      <b> 2023-12-28 </b> <br />
      각 페이지 생성(HOME, CATEGORY, TAGS, ARCHIVES 등..)
      <br />
      <br />
      <b> 2023-12-31 </b> <br />
      breadcrumb 공통 컴포넌트 추가
      <br />
      <br />
      <b> 2024-01-04 </b> <br />
      breadcrumb search 컴포넌트 추가
      <br />
      <br />
      {/* <b> 2023-01-06 </b> <br />
      포스트 상세페이지 시작
      <br />
      <br /> */}
      <b>2023-01-06 </b> <br />
      구글 폰트 적용(IBM Plex Sans KR)
      <br />
      <br />
      <b> 2023-01-07 </b> <br />
      post 상세페이지 코드 공통 컴포넌트 생성
      <br />
      <br />
      <b> 2023-01-09 </b> <br />
      prompts 컴포넌트 추가
      <br />
      <br />
      <b> 2023-01-07 </b> <br />
      post 상세페이지 코드 공통 컴포넌트 생성
      <br />
      <br />
      <b> 2023-01-15 </b> <br />
      전역 상태 관리를 위해 Context API 추가
      <br />
      <br />
      <b> 2023-01-17 </b> <br />
      post 페이지 5개 게시물 단위로 무한 스크롤 기능 추가
      <br />
      react-intersection-observer 사용
      <br />
      <br />
      <b> 2023-01-19 </b> <br />
      패널 공톰 컴포넌트 생성
      <br />
      <br />
      <b> 2023-01-20 </b> <br />
      Context API를 reduct-toolkit으로 변경
      <br />
      <br />
      <b> 2023-01-24 </b> <br />
      알고리즘 카테고리 생성
      <br />
      <br />
      <b> 2023-01-30 </b> <br />
      카테고리 페이지 개발
      <br />
      <br />
      <b> 2023-02-03 </b> <br />
      아카이브 카테고리 개발
      <br />
      <br />
      <b> 2023-02-06 </b> <br />
      태그 카테고리 개발
      <br />
      <br />
      <b> 2023-02-07 </b> <br />
      BreadCrumb 라우터 경로 컴포넌트 개발
      <br />
      <br />
      <b> 2023-02-12 </b> <br />
      github.io 배포
      <br />
      <br />
      <b> 2023-02-12 </b> <br />
      github.io 배포
      <br />
      <br />
      <b> 2023-02-13 </b> <br />
      portfolio 기본 배포버전 적용 v1.0.0
      <br />
      <br />
      <b> 2023-02-14 </b> <br />
      베짱이가 되고싶은 개미로 컨셉 설정 ㅋㅋ
      <br />
      <br />
      <b> 2023-02-14 </b> <br />
      portfolio v1.0.0-alpha.1 - post와 algorithm페이지 하단 이전게시물
      다음게시물 컴포넌트로 분리
    </div>
  );
}
// 프로젝트 버전을 표시할 때 일반적으로 시맨틱 버전(Semantic Versioning) 규칙을 따르는 것이 좋습니다. 시맨틱 버전은 버전 번호를 정의하는 규칙이며, 주 버전, 부 버전, 수 버전으로 구성됩니다. 주 버전은 하위 호환되지 않는 변경사항, 부 버전은 하위 호환성을 유지하면서 기능을 추가한 경우, 수 버전은 하위 호환성을 유지하면서 버그를 수정한 경우에 증가합니다.

// 시맨틱 버전의 형식은 다음과 같습니다: MAJOR.MINOR.PATCH

// MAJOR: 주 버전. 하위 호환되지 않는 변경사항이 있을 때 증가합니다.
// MINOR: 부 버전. 하위 호환성을 유지하면서 기능을 추가한 경우 증가합니다.
// PATCH: 수 버전. 하위 호환성을 유지하면서 버그를 수정한 경우 증가합니다.
// 프로젝트 버전을 표시할 때는 위의 형식을 따르고, 추가적으로 프리릴리즈 정보를 추가할 수도 있습니다. 프리릴리즈 정보는 주 버전, 부 버전, 수 버전 뒤에 추가되며, 보통은 - 또는 +로 구분합니다.

// 예를 들어, 시맨틱 버전 1.2.3 뒤에 프리릴리즈 정보 alpha를 추가하면 1.2.3-alpha와 같이 표시됩니다.
